{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gMA0CeA,EAtCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OAEI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,MAAE,CAACP,MACrBC,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAsBfG,YAAc,2B,8BC9BjBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEFI,MAAMF,GAFJ,cAEbG,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCULO,EATK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC3B,OACI,sBAAKc,UAAW,yCAAhB,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAIA,QC0BDO,EA5BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGd,ECHwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAE/BsB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAhBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAIGqB,EDrBsBK,CAAa1B,GAA9Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAMnB,OACI,qCACA,oBAAIJ,UAAU,mDAAd,SAAkEhB,IAEhEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAW,YAAhB,SAESH,EAAOJ,KAAK,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEepBgB,EAlCM,WAIjB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAOA,OACI,mCACI,sBAAKgC,UAAU,iBAAf,UAGI,oBAAIA,UAAU,YAAd,0BACA,uBACA,cAAC,EAAD,CAAahC,cAAeA,IAC5B,6BAEQ4C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CACIA,SAAUA,GACLA,c,MCtBrC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6faa6aba.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategories(cats=>[inputValue ]); // aca borre el ..cats para que aparezca solamente la ultima busqueda\r\n            setInputValue('');\r\n        }\r\n\r\n        // console.log('Submit hecho');\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange= { handleInputChange }\r\n                placeholder = \"Search your gifs...\"\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=HQzYivzexd7CQIwBKYr4cUy3o0ByIpCR`;\r\n    const res= await fetch(url);\r\n    const {data} = await res.json();\r\n    \r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className= \"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = {title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n\r\n    const {data:images,loading}= useFetchGifs(category);\r\n    \r\n    \r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn category-title\">{category}</h3>\r\n        \r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n        <div className= \"card-grid\">\r\n            \r\n                {images.map( img =>\r\n                        <GifGridItem \r\n                        key = {img.id}\r\n                        {...img}/> //se usa el spread operator para pasar todo el objeto como props\r\n                )}\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X','Dragon Ball']\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = (serie)=>{\r\n    //     // setCategories([...categories, 'NAruto'])\r\n    //     setCategories(cats=>[...cats,'HunterXHunter'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-container\">\r\n\r\n\r\n                <h2 className=\"app-title\">GifExpertApp</h2>\r\n                <hr />\r\n                <AddCategory setCategories={setCategories} />\r\n                <ol>\r\n                    {\r\n                        categories.map((category) =>\r\n                            <GifGrid\r\n                                category={category}\r\n                                key={category}\r\n                            />\r\n                        )\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}